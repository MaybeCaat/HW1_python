# вводим числа k, n и m с клавиатуры
k = int(input())  # котлет на сковородку за раз
m = int(input())  # минут на прожарку одной стороны
n = int(input())  # всего сколько пожарить котлет

# возьмём задачу с k = 2, m = 1, n = 3
# в таком случае нужно пожарить 1-ю и 2-ю котлеты с одной стороны, затем дожарить 1-ю со второй стороны,
# одновременно жаря 3-ю с первой стороны и в конце дожарить 2-ю и 3-ю со второй стороны
# при таком решении мы получаем 3 минуты всего, а не 4, как получилось бы, если делить количество котлет n на
# количество котлет за раз k

# то есть нужно делить не количество котлет n на количество котлет за раз k, а
# количество сторон котлет (n * 2) на количество котлет за раз k

# если общее количество котлет меньше, чем может поместиться на сковородку (жарим всё за один подход),
# то мы просто умножаем время прожарки одной стороны на 2 (нужно прожарить обе стороны)
if n <= k:
    print(int(m * 2))

# если количество сторон прожарки делится нацело на количество котлет на сковородке одновременно,
# то тогда, чтобы посчитать количество минут всего, то мы с помощью (2*n // k) считаем количество раз,
# сколько перевернём/сменим котлеты на сковородке и умножаем на количество минут прожарки одной стороны
elif ((2 * n) % k) == 0:
    result = (2 * n // k) * m
    print(int(result))

# если количество сторон прожарки НЕ делится нацело на количество котлет на сковородке одновременно,
# то тогда придётся добавить к итоговому времени время прожарки ещё одной стороны (неполная сковородка)

# доказать это можно на примере с k = 3, m = 1, n = 7
# сначала жарим 1-ю, 2-ю и 3-ю котлету (с первой стороны), потом 1-ю (со второй), 4-ю и 5-ю (с первой),
# затем 2-ю, 3-ю (со второй) и 6-ю (с первой), после этого 4-ю, 5-ю (со второй) и 7-ю (с первой),
# а затем 6-ю и 7-ю (со второй)
else:
    result = (1 + (2 * n // k)) * m
    print(int(result))
